server:
  port: 8080
  servlet:
    encoding:
      charset: utf-8

spring:
  # OAuth 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
            redirect-uri: http://localhost:8080/auth/google/callback
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

  # 데이터베이스 설정
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://this-vs-that-db.c9kaq20smgva.ap-northeast-2.rds.amazonaws.com:5432/thisvsthatDB
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 10          # 최대 연결 풀 크기
      minimum-idle: 5               # 최소 유지할 유휴 연결 수
      connection-timeout: 30000     # 연결 시도 제한 시간 (밀리초)
      idle-timeout: 600000          # 유휴 연결 종료 시간 (밀리초)
      max-lifetime: 1800000         # 연결 최대 유지 시간 (밀리초)

  # JPA 설정
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: validate  # 엔티티와 테이블 구조가 일치하는지 검증만 수행
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_batch_fetch_size: 100  # N+1 문제 방지
    show-sql: true  # SQL 로그 출력

  # Redis 설정
#  data:
#    redis:
#      host: your-redis-hostname
#      port: 6379

# AWS S3 설정
aws:
  s3:
    bucket: this-vs-that-bucket
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    region: ap-northeast-2
    default-profile-url: https://this-vs-that-bucket.s3.ap-northeast-2.amazonaws.com/IgPhYPQvR7CZgo3oOon5dQ.png

# jwt 설정
jwt:
  secret: ${JWT_SECRET}
  expiration-time: 3600000  # 1시간 유지 (밀리초 단위)

logging:
  level:
    org:
      springframework:
        security: DEBUG

# Spring Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health  # health 엔드포인트만 노출
  endpoint:
    health:
      show-details: always  # 상세한 헬스 체크 정보 제공